# plot(main = 'Wassaw', multi_biom[,2]+12*(multi_biom[,1]-1984),multi_biom[,3],
#      ylim = c(0,2200), pch = 16, xlab = 'Months(1984-2018)', ylab = 'Biomass(g/m2)')
# lines(ts_with_na[,3], col = 'red', pch = 2, cex = 2) # plots consecutive points so looks incomplete
ggplot(as.data.frame(ts_with_na), aes(x = 1:420, y = Altamaha)) + geom_line() + geom_point() +
geom_vline(xintercept = c(337,348),linetype="dashed", color = "red") + ggtitle('Altamaha Biomass TS') + xlab('Months') + ylab('g/m2')
View(ts_with_na)
library(tseries)
library(rnoaa)
library(lawn)
library(sp)
library(tidyverse)
library(astsa)
library(ggfortify)
library(lubridate)
data(list = c('salmon','gas','oil'))
gas
ts.union(oil,gas,salmon)
autoplot(ts.union(oil,gas), facets = F)
salmon
frequency(salmon)
data(list = c('unemp','birth'))
autoplot(ts.union(unemp,birth), facets = F)
unemp_birth <-tibble(year = year(date_decimal(as.numeric(time(birth)))), month = month(date_decimal(as.numeric(time(birth)))),
ts.union(unemp,birth))
tail(unemp_birth)
ts.union(unemp,birth)
unemp_birth <-tibble(year = year(date_decimal(as.numeric(time(birth)))), month = month(date_decimal(as.numeric(time(birth)))),
unemp = unemp, birth = birth)
data(list = c('salmon','gas','oil'))
autoplot(ts.union(oil,gas), facets = F)
data(list = c('unemp','birth'))
autoplot(ts.union(unemp,birth), facets = F)
unemp_birth <-tibble(year = year(date_decimal(as.numeric(time(unemp)))), month = month(date_decimal(as.numeric(time(unemp)))),
unemp = unemp, birth = birth)
birth <- birth[-length(birth)]
autoplot(ts.union(unemp,birth), facets = F)
unemp_birth <- tibble(year = year(date_decimal(as.numeric(time(unemp)))), month = month(date_decimal(as.numeric(time(unemp)))),
unemp = unemp, birth = birth)
tail(unemp_birth)
birth <- birth[-length()]
birth <- birth[-length(b)]
birth <- birth[-length(birth)]
data(list = c('unemp','birth'))
birth <- birth[-length(birth)]
autoplot(ts.union(unemp,birth), facets = F)
unemp_birth <- tibble(year = year(date_decimal(as.numeric(time(unemp)))), month = month(date_decimal(as.numeric(time(unemp)))),
unemp = unemp, birth = birth)
tail(unemp_birth)
data(list = c('salmon','gas','oil','cardox'))
cardox
gas
autoplot(ts.union(cardox,salmon), facets = F)
# library(lawn)
# library(sp)
library(tidyverse)
library(astsa)
# library(ggfortify)
# library(lubridate)
library(reshape2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# options(noaakey = "ksqzZJuiacOtnGaZJTLIXjdOcypMeTmb")
#
# ncdc(datasetid = 'GSOM', stationid = 'GSOM:USW00014895', startdate = '1990-01-01',
#      enddate = '2000-01-01')
# lawn_bbox_polygon(c(-122.2047, 47.5204, -122.1065, 47.6139)) %>% view
# stations <- ncdc_stations(extent = c(47.5204, -122.2047, 47.6139, -122.1065))
#
# dummy <- ncdc(datasetid='GSOM', startdate = '2013-10-01', enddate = '2013-12-01',
#               stationid = "GHCND:AE000041196")
#
# dummy$data %>%
#   filter(datatype == 'PRCP') %>%
#   select(date, value) %>%
#   mutate(time = as.POSIXct(date)) %>%
#   ggplot(aes(time, value))
data(list = c('salmon','gas','oil','cardox'))
autoplot(ts.union(oil,gas), facets = F)
data(list = c('unemp','birth'))
birth <- birth[-length(birth)]
# library(zoo)
# as.yearmon(time(birth))
# as.Date.yearmon(time(birth))
# autoplot(birth)
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$unemp[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, unemp)) + geom_line()
source('opt_fit.R')
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
# library(ggfortify)
library(lubridate)
library(tidyverse)
library(astsa)
# library(ggfortify)
library(lubridate)
library(reshape2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# options(noaakey = "ksqzZJuiacOtnGaZJTLIXjdOcypMeTmb")
#
# ncdc(datasetid = 'GSOM', stationid = 'GSOM:USW00014895', startdate = '1990-01-01',
#      enddate = '2000-01-01')
# lawn_bbox_polygon(c(-122.2047, 47.5204, -122.1065, 47.6139)) %>% view
# stations <- ncdc_stations(extent = c(47.5204, -122.2047, 47.6139, -122.1065))
#
# dummy <- ncdc(datasetid='GSOM', startdate = '2013-10-01', enddate = '2013-12-01',
#               stationid = "GHCND:AE000041196")
#
# dummy$data %>%
#   filter(datatype == 'PRCP') %>%
#   select(date, value) %>%
#   mutate(time = as.POSIXct(date)) %>%
#   ggplot(aes(time, value))
data(list = c('salmon','gas','oil','cardox'))
autoplot(ts.union(oil,gas), facets = F)
data(list = c('unemp','birth'))
birth <- birth[-length(birth)]
# library(zoo)
# as.yearmon(time(birth))
# as.Date.yearmon(time(birth))
# autoplot(birth)
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$unemp[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, unemp)) + geom_line()
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
data(list = c('salmon','gas','oil','cardox'))
autoplot(ts.union(oil,gas), facets = F)
data(list = c('unemp','birth'))
birth <- birth[-length(birth)]
# library(sp)
library(tidyverse)
library(astsa)
library(ggfortify)
library(lubridate)
library(reshape2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# options(noaakey = "ksqzZJuiacOtnGaZJTLIXjdOcypMeTmb")
#
# ncdc(datasetid = 'GSOM', stationid = 'GSOM:USW00014895', startdate = '1990-01-01',
#      enddate = '2000-01-01')
# lawn_bbox_polygon(c(-122.2047, 47.5204, -122.1065, 47.6139)) %>% view
# stations <- ncdc_stations(extent = c(47.5204, -122.2047, 47.6139, -122.1065))
#
# dummy <- ncdc(datasetid='GSOM', startdate = '2013-10-01', enddate = '2013-12-01',
#               stationid = "GHCND:AE000041196")
#
# dummy$data %>%
#   filter(datatype == 'PRCP') %>%
#   select(date, value) %>%
#   mutate(time = as.POSIXct(date)) %>%
#   ggplot(aes(time, value))
data(list = c('salmon','gas','oil','cardox'))
autoplot(ts.union(oil,gas), facets = F)
data(list = c('unemp','birth'))
birth <- birth[-length(birth)]
# library(zoo)
# as.yearmon(time(birth))
# as.Date.yearmon(time(birth))
# autoplot(birth)
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$unemp[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, unemp)) + geom_line()
data(list = c('unemp','birth'))
birth <- birth[-length(birth)]
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
library(zoo)
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$unemp[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, unemp)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp, birth = birth)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$unemp[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, unemp)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:372, artificial = artificial_ts[[1]]$value, gapless = as.numeric(unemp))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = unemp))
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = unemp)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$unemp[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, unemp)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
aggregate(unemp_data[,c(-1,-2)], by = list(unemp_data$month),function(x) c(mean(x,na.rm = T)))
unemp_data[,c(-1,-2)]
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = as.numeric(unemp))
unemp_data
aggregate(unemp_data[,c(-1,-2)], by = list(unemp_data$month),function(x) c(mean(x,na.rm = T)))
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
unemp = as.numeric(unemp))
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$unemp[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, unemp)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:372, artificial = artificial_ts[[1]]$value, gapless = as.numeric(unemp))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = unemp))
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
value = as.numeric(unemp))
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, value)) + geom_line()
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
value = as.numeric(birth))
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(150, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, value)) + geom_line()
source('opt_fit.R')
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
value = as.numeric(birth))
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(200, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, value)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:372, artificial = artificial_ts[[1]]$value, gapless = as.numeric(unemp))
unemp_data_1
nrow(unemp_data)
unemp_data_1 <- cbind(index = 1:nrow(unemp_data), unemp_data, artificial = artificial_ts[[1]]$value, gapless = as.numeric(unemp))
unemp_data_1
unemp_data_1 <- cbind(index = 1:nrow(unemp_data), unemp_data, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
unemp_data
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = unemp))
unemp_data_1
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = value))
unemp_data_1
unemp_data_1 <- cbind(index = 1:nrow(unemp_data), unemp_data$value, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
unemp_data_1
unemp_data_1 <- cbind(index = 1:nrow(unemp_data), value = unemp_data$value, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = value))
unemp_data_1 <- cbind(index = 1:nrow(unemp_data), value = unemp_data$value, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
melted
unemp_data_1 <- cbind(value = unemp_data$value, index = 1:nrow(unemp_data), artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
melted
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = value))
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
unemp_data_1 <- cbind(value = unemp_data$value, index = 1:nrow(unemp_data), artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
unemp_data_1
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
melted
unemp_data_1 <- cbind(index = 1:nrow(unemp_data), unemp_data, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
unemp_data_1
unemp_data_1 <- cbind(unemp_data, index = 1:372, artificial = artificial_ts[[1]]$value, gapless = as.numeric(unemp))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
unemp_data_1
unemp_data_1 <- cbind(unemp_data, index = 1:372, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = birth))
unemp_data
head(unemp_data)
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
value = as.numeric(birth))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(200, min = 1, max = 370))] <- NA
head(unemp_data)
ggplot(unemp_data, aes(1:372, value)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
length(as.numeric(unique(unemp_data[,1])))
artificial_ts
max(unemp_data[,3], na.rm = T) - min(unemp_data[,3], na.rm = T)
as.integer(max(unemp_data[,3], na.rm = T)/min(unemp_data[,3], na.rm = T))
max(unemp_data[,3], na.rm = T)
min(unemp_data[,3], na.rm = T)
max(unemp_data[,3], na.rm = T)/min(unemp_data[,3], na.rm = T)
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:372, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = birth))
as.integer(max(unemp_data[,3], na.rm = T)/min(unemp_data[,3], na.rm = T))
max(unemp_data[,3], na.rm = T) - min(unemp_data[,3], na.rm = T)
max(unemp_data[,3], na.rm = T)
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:372, artificial = artificial_ts[[1]]$value, gapless = as.numeric(birth))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = birth))
data(list = c('salmon','gas','oil','cardox'))
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
value = as.numeric(salmon))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(200, min = 1, max = 370))] <- NA
ggplot(unemp_data, aes(1:372, value)) + geom_line()
data(list = c('salmon','gas','oil','cardox'))
# autoplot(birth)
head(salmon)
# autoplot(birth)
salmon
unemp_data <- data.frame(year = year(as.Date(time(unemp))), month = month(as.Date(time(unemp))),
value = as.numeric(salmon))
unemp_data <- data.frame(year = year(as.Date(time(salmon))), month = month(as.Date(time(salmon))),
value = as.numeric(salmon))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(200, min = 1, max = 370))] <- NA
input_ts <- salmon
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
head(unemp_data)
length(input_ts)
input_ts <- salmon
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(length(input_ts)/2, min = 1, max = length(input_ts)))] <- NA
ggplot(unemp_data, aes(1:372, value)) + geom_line()
ggplot(unemp_data, aes(1:length(input_ts), value)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:length(input_ts), artificial = artificial_ts[[1]]$value, gapless = as.numeric(input_ts))
length(input_ts)
unemp_data
artificial_ts[[1]]$value
artificial_ts[[1]]
ggplot(artificial_ts[[1]], aes(1:nrow(artificial_ts[[1]]), value)) + geom_line()
input_ts <- gas
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
input_ts <- gas
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
gas
time(input_ts)
as.Date(time(input_ts))
input_ts <- oil
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
data(list = c('salmon','gas','oil','cardox'))
input_ts <- cardox
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(length(input_ts)/2, min = 1, max = length(input_ts)))] <- NA
ggplot(unemp_data, aes(1:length(input_ts), value)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:length(input_ts), artificial = artificial_ts[[1]]$value, gapless = as.numeric(input_ts))
unemp_data_1 <- cbind(index = 1:length(nrow(artificial_ts[[1]])), artificial = artificial_ts[[1]]$value)#, gapless = as.numeric(input_ts))
unemp_data_1
1:length(nrow(artificial_ts[[1]]))
nrow(artificial_ts[[1]])
unemp_data_1 <- cbind(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value)#, gapless = as.numeric(input_ts))
unemp_data_1
# unemp_data_1 <- cbind(unemp_data, index = 1:length(input_ts), artificial = artificial_ts[[1]]$value, gapless = as.numeric(input_ts))
unemp_data_1 <- cbind(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value)
melted <- unemp_data_1   #melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = input_ts))
input_ts
as.numeric(input_ts)
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.numeric(input_ts), aes(x = 1:length(input_ts), y = input_ts))
as.data.frame(input_ts)
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
input_ts <- birth
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(length(input_ts)/2, min = 1, max = length(input_ts)))] <- NA
ggplot(unemp_data, aes(1:length(input_ts), value)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:length(input_ts), artificial = artificial_ts[[1]]$value, gapless = as.numeric(input_ts))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = input_ts))
unemp_data_1
unemp_data_1 <- cbind(unemp_data, index = 1:length(input_ts), artificial = artificial_ts[[1]]$value, gapless = as.numeric(input_ts))
as.numeric(input_ts)
artificial_ts[[1]]$value
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
max(unemp_data[,3], na.rm = T) - min(unemp_data[,3], na.rm = T)
input_ts <- unemp
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(length(input_ts)/2, min = 1, max = length(input_ts)))] <- NA
ggplot(unemp_data, aes(1:length(input_ts), value)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
unemp_data_1 <- cbind(unemp_data, index = 1:length(input_ts), artificial = artificial_ts[[1]]$value, gapless = as.numeric(input_ts))
melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = input_ts))
cbind(index = 1:length(input_ts), artificial = artificial_ts[[1]]$value)
melted <- cbind(index = 1:length(input_ts), artificial = artificial_ts[[1]]$value)
ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = input_ts))
unemp_data_1 <- cbind(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value)
unemp_data_1
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x, col = 2))
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x, col = 3))
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x, col = 1))
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x, col = 12))
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial), col = 2) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
unemp_data_1 <- cbind(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value)
ggplot(unemp_data_1) + geom_line(aes(x = index, y = artificial), col = 2) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(unemp_data, aes(1:length(input_ts), value)) + geom_line()
unemp_data_1 <- cbind(unemp_data, index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value)
unemp_data_1
unemp_data_1 <- cbind(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value, gapped = unemp_data$value)
unemp_data_1
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = artificial, color = metric)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(melted) + geom_line(aes(x = index, y = value, color = metric)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
melted
unemp_data_1 <- data.frame(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value, gapped = unemp_data$value)
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
melted
ggplot(melted) + geom_line(aes(x = index, y = value, color = metric)) + geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(melted) + geom_line(aes(x = index, y = value)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x)) +
facet_grid(~metric)
melted
ggplot(melted) + geom_line(aes(x = index, y = value)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x)) +
facet_wrap(~metric)
ggplot(melted) + geom_line(aes(x = index, y = value)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(melted) + geom_line(aes(x = index, y = value)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x)) +
facet_wrap(~metric)
unemp_data_1
ggplot(melted) + geom_line(aes(x = index, y = value)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(melted) + geom_line(aes(x = index, y = value, color = 'metric')) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
ggplot(melted) + geom_line(aes(x = index, y = value, color = metric)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
unemp_data_1 <- data.frame(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value)#, gapped = unemp_data$value)
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
melted
ggplot(melted) + geom_line(aes(x = index, y = value, color = metric)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
input_ts <- birth
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(length(input_ts)/2, min = 1, max = length(input_ts)))] <- NA
ggplot(unemp_data, aes(1:length(input_ts), value)) + geom_line()
# max(unemp_data[,3], na.rm = T) - min(unemp_data[,3], na.rm = T)
# as.integer(max(unemp_data[,3], na.rm = T)/min(unemp_data[,3], na.rm = T))
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
# unemp_data_1 <- cbind(unemp_data, index = 1:length(input_ts), artificial = artificial_ts[[1]]$value, gapless = as.numeric(input_ts))
# melted <- melt(unemp_data_1[,-1:-3], id.vars = 'index', variable.name = 'metric')
# ggplot(melted) + geom_line(aes(x = index, y = value, colour = metric)) + geom_point(data = unemp_data_1, aes(x = index, y = input_ts))
unemp_data_1 <- data.frame(index = 1:nrow(artificial_ts[[1]]), artificial = artificial_ts[[1]]$value)#, gapped = unemp_data$value)
melted <- melt(unemp_data_1, id.vars = 'index', variable.name = 'metric')
ggplot(melted) + geom_line(aes(x = index, y = value, color = metric)) +
geom_point(data = as.data.frame(input_ts), aes(x = 1:length(input_ts), y = x))
input_ts
input_ts <- birth
unemp_data <- data.frame(year = year(as.Date(time(input_ts))), month = month(as.Date(time(input_ts))),
value = as.numeric(input_ts))
head(unemp_data)
############ optimized fit (this is an alternative to cover the gaps)
## introduce some missing points
unemp_data$value[as.integer(runif(length(input_ts)/2, min = 1, max = length(input_ts)))] <- NA
ggplot(unemp_data, aes(1:length(input_ts), value)) + geom_line()
source('opt_fit.R')
artificial_ts <- opt_fit(unemp_data)
